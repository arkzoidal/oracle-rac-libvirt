    - name: update /etc/fstab with iso mount
      mount:
        path: /media
        src: /dev/cdrom
        fstype: iso9660
        opts: loop,ro,auto
        dump: '0'
        state: mounted
      when: ansible_distribution in "RedHat"

    - name: Install cloud-utils-growpart gdisk
      dnf:
        name: "{{ item }}"
        state: latest
      with_items:
        - cloud-utils-growpart 
        - gdisk

    - name: display gv_libvirt_vda_disk_size
      ansible.builtin.debug:
        msg:
        - "{{ gv_libvirt_vda_disk_size }}"

    - name: fdisk -l root disk
      shell: >
         fdisk -l {{ hv_libvirt_vda_disk_file }}
      delegate_to: localhost
      register: fdisk

    - debug: msg="{{ fdisk.stdout }}"

    - name: virsh shutdown domain
      shell: >
          virsh shutdown {{ hv_libvirt_domain }}
      delegate_to: localhost
      tags:
        - never

    - name: Wait for shutdown
      ansible.builtin.shell: virsh list --all | grep {{ hv_libvirt_domain }} 
      register: vcpuinfo
      delegate_to: 127.0.0.1
      until: "'running' not in vcpuinfo.stdout"
      retries: 20
      delay: 10
      ignore_errors: true 
      tags:
        - never

    - name: virsh blockresize
      shell: >
           virsh blockresize {{ hv_libvirt_domain }} {{ hv_libvirt_vda_disk_file }} {{ gv_libvirt_vda_disk_size }}
      delegate_to: localhost

    - name: growpart /dev/vda 1
      shell: >
           growpart /dev/vda 1
      when: ansible_distribution not in "OracleLinux" and ansible_distribution not in "RedHat"

    - name: growpart /dev/vda 3
      shell: >
           growpart /dev/vda 3
      when: ansible_distribution in "RedHat"

    - name: Pause
      pause:
        prompt: "Check / FS"
      tags:
        never

    - name: xfs_growfs /
      shell: >
           xfs_growfs /
      when: ansible_distribution in "RedHat" or ansible_distribution in "Rocky"

    - name: Pause
      pause:
        prompt: "Check / FS"
      tags:
        never

    - debug: msg="start {{ hv_libvirt_domain }}"
      tags:
        never

    - name: virsh start domain
      shell: >
          virsh start {{ hv_libvirt_domain }}
      delegate_to: localhost
      tags:
        - never

    - name: list all VMs
      ansible.builtin.shell: virsh list --all | grep {{ hv_libvirt_domain }} 
      register: vcpuinfo
      delegate_to: 127.0.0.1
      until: "'running' in vcpuinfo.stdout"
      retries: 20
      delay: 10
      ignore_errors: true 
      tags:
        - never

    - name: lsblk
      shell: >
         lsblk
      delegate_to: localhost
      register: lsblk
      tags:
        always

    - debug: msg="{{ lsblk.stdout }}"
      tags:
        always

    - name: Pause
      pause:
        prompt: "to check reboot"
