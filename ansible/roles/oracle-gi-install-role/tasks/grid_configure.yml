- name: oracle-gi-install-role | grid_setup_softonly_install | Creates directory gv_oracle_home_gi/install
  when: ansible_hostname == gv_cluster_first_node
  remote_user: "{{ gv_root_user }}"
  become: yes
  become_method: sudo
  become_user: "{{ gv_grid_user }}"
  file:
    path: "/home/{{ gv_grid_user }}/install/{{ file_item }}"
    state: directory
    owner: "{{ gv_grid_user }}"
    group: "{{ gv_oracle_install_group }}"
    mode: 0775
    recurse: yes
  loop: 
    - log
    - response
  loop_control:
    loop_var: file_item

- name: oracle-gi-install-role | grid_configure | Create install/grid_configure.sh
  when: ansible_hostname == gv_cluster_first_node
  remote_user: "{{ gv_root_user }}"
  become: yes
  become_method: sudo
  become_user: "{{ gv_grid_user }}"
  template:
     src: grid_configure.sh.j2
     dest: "/home/{{ gv_grid_user }}/install/grid_configure.sh"
     owner: "{{ gv_grid_user }}"
     group: "{{ gv_oracle_install_group }}"
     mode: u=rwx,g=rx,o=r

- name: oracle-gi-install-role | grid_configure | Create response/grid_configure.rsp 
  when: ansible_hostname == gv_cluster_first_node
  remote_user: "{{ gv_root_user }}"
  become: yes
  become_method: sudo
  become_user: "{{ gv_grid_user }}"
  template:
     src: "grid_configure.rsp.{{ gv_oracle_install_version_gi }}.j2"
     dest: "/home/{{ gv_grid_user }}/install/response/grid_configure.rsp"
     owner: "{{ gv_grid_user }}"
     group: "{{ gv_oracle_install_group }}"
     mode: u=rwx,g=rx,o=r

- name: oracle-gi-install-role | grid_setup_softonly_install | run install/grid_configure.sh
  when: ansible_hostname == gv_cluster_first_node
  remote_user: "{{ gv_root_user }}"
  become: yes
  become_method: sudo
  become_user: "{{ gv_grid_user }}"
  ansible.builtin.shell: "/home/{{ gv_grid_user }}/install/grid_configure.sh | tee -a /home/{{ gv_grid_user }}/install/log/grid_configure.log"
  args:
      warn: false # set warn=false to prevent warning
  failed_when: grid_setup_softonly_install.rc != 0   #### This condition is based on my own setup
  register: grid_setup_softonly_install
  no_log:             false

- name: oracle-gi-install-role | Get the output log status
  when: ansible_hostname == gv_cluster_first_node
  remote_user: "{{ gv_root_user }}"
  become: yes
  become_method: sudo
  become_user: "{{ gv_grid_user }}"
  shell: grep -ir "Successfully" /home/{{ gv_grid_user }}/install/log/grid_configure.log
  register: gisoftinstall_log

- name: oracle-gi-install-role | "Output from Post GI Software Installation Check"
  debug:
    var: gisoftinstall_log.stdout
    verbosity: 0
  when: ansible_hostname == gv_cluster_first_node and "'Successfully' in gisoftinstall_log.stdout"
