# =============================================================================

- name: Execute root.sh on the other nodes
  remote_user: "{{ gv_root_user }}"
  become: yes
  become_method: sudo
  become_user: "{{ gv_root_user }}"
  when: inventory_hostname in gv_gi_server_list and inventory_hostname not in gv_cluster_first_node
  shell: "{{ gv_oracle_home_gi_cl }}/root.sh"
  register: other_root_node

- name: Get the logfile information on the other nodes
  remote_user: "{{ gv_root_user }}"
  become: yes
  become_method: sudo
  become_user: "{{ gv_root_user }}"
  when: inventory_hostname in gv_gi_server_list and inventory_hostname not in gv_cluster_first_node and hostvars[inventory_hostname]['other_root_node'] is defined
  shell: "echo {{ hostvars[inventory_hostname]['other_root_node'].stdout }} | grep -oP '(?<=Check).*?(?=for)' "
  register: logfile

- name: Get the logfile information on the other node
  remote_user: "{{ gv_root_user }}"
  become: yes
  become_method: sudo
  become_user: "{{ gv_root_user }}"
  when: inventory_hostname in gv_gi_server_list and inventory_hostname not in gv_cluster_first_node and hostvars[inventory_hostname]['logfile'] is defined
  shell: "cat {{ logfile.stdout }} "
  register: rootloginfon2

- debug:
    var: hostvars[inventory_hostname]['rootloginfon2'].stdout_lines
  when: inventory_hostname in gv_gi_server_list and inventory_hostname not in gv_cluster_first_node and hostvars[inventory_hostname]['rootloginfon2'] is defined
